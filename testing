"Too little testing is a crime, too much testing is a sin."
	- William E. Perry, Effective Methods for Software Testing, Third 
Edition
%
Happy path tests are easy; edge cases and failure scenarios take more 
thought and work. Here’s where having some good (and yet pathological) 
testers on the team can reap rewards.
%
	® Prove all things; hold fast that which is good.  KJV
	® Test everything. Hold on to what is good.  ISV
	® Examine all things; retain that which is good.  JB2000
	— 1 Thessalonians 5:21
%
[...T]esting, [...] is only one of several methods commonly used to 
validate that a system meets its stakeholders’ needs and to verify that 
the system conforms to its specified requirements. [...O]ther such 
methods [include] inspections, demonstrations, reviews, analysis, 
simulation, reuse, and certification[…].
	- Donald G. Firesmith, Common System and Software Testing Pitfalls: How 
to Prevent and Mitigate Them: Descriptions, Symptoms, Consequences, 
Causes, and Recommendations
%
[T]he primary objective of any QA department is to ensure successful 
projects. What is a successful project? I can define it as encompassing 
two major criteria: the client is satisfied and the business is 
profitable.
%
Testing can only prove the presence of bugs, not their absence.
	— Edsger W. Dijkstra
%
One of the trickiest axioms within testing is that everyone relies on 
testers to find others’ errors, while tending to forget that testers may 
be wrong themselves. Humans err, and testers are human. This means they 
overlook problems or misunderstand outputs. Some of the problems they 
find turn out not to be problems at all.
	— Zeger Van Hese
%
All the testing we did, meticulously pulling down every menu and seeing 
if it worked right, didn’t uncover the showstoppers that made it 
impossible to do what the product was intended to allow. Trying to use 
the product, as a customer would, found these showstoppers in a minute.
	— Joel Spolsky
%
The Pesticide Paradox
Every method you use to prevent or find bugs leaves a residue of subtler 
bugs against which those methods are ineffectual.
	— Boris Bezier
%
"We cannot solve our problems by applying the same level of thinking 
that we used when we created them."
“Without changing our patterns of thought, we will not be able to solve 
the problems that we created with our current patterns of thought.” 
	— Albert Einstein
%
"Empirically observed covariation is a necessary but not sufficient 
condition for causality."
"Correlation is not causality but it sure is a hint."
	— Edward Tufte
%
Under the hood, most critical software you use every day (like Mac OS X, 
or Facebook) contains a terrifying number of hacks and shortcuts that 
happen to barely fit together into a working whole. It would be like 
taking apart a brand-new 747 and discovering that the fuel line is held 
in place by a coat-hanger and the landing gear is attached with duct 
tape.
	- Ben Cherry
%
Ask yourself (and answer) the fundamental questions like "why do we need 
testers?","what is good testing?", "what should I document, why and for 
who?"... The greatest value in questions like these is not the answer 
but the thought process of getting to an answer. 
	- Erik Brickarp
%
Don't repeat yourself: don't repeat the same actions, don't follow the 
same path, the same order. Break your habits. 
	- Philippe Antras
%
You look at where you're going and where you are and it never makes 
sense, but then you look back at where you've been and a pattern seems 
to emerge. And if you project forward from the pattern, then sometimes 
you can come up with something. 
	- R. M. Pirsig, Zen and the Art of Motorcycle Maintenance
%
A ‘passing’ test doesn’t mean ‘no problem.’ It means no problem 
*observed*. This time. With these inputs. So far. On my machine. 
	– Michael Bolton
%
“More than the act of testing, the act of designing tests is one of the 
best bug preventers known. The thinking that must be done to create a 
useful test can discover and eliminate bugs before they are coded – 
indeed, test-design thinking can discover and eliminate bugs at every 
stage in the creation of software, from conception to specification, to 
design, coding and the rest.” 
	– Boris Beizer
%
“Quality is more important than quantity. One home run is much better 
than two doubles.” 
	– Steve Jobs
%
“Quality begins on the inside… then works its way out.” 
	- Bob Moawad
%
"Quis custodiet ipsos custodes?"
	- Juvenal
%
“A passionate tester is more beneficial than an experienced developer.”
From <http://www.softwaretestinghelp.com/goals-of-a-software-tester/> 
%
"If you want more effective programmers, you will discover that they 
should not waste their time debugging, they should not introduce the 
bugs to start with."
	— Edsger W. Dijkstra
%
The quality of a great product lies in the hands of the individuals 
designing, programming, testing, and documenting it, each of whom 
counts. Standards, specifications, committees, and change controls will 
not assure quality, nor do software houses rely on them to play that 
role. It is the commitment of the individuals to excellence, their 
mastery of the tools of their crafts, and their ability to work together 
that makes the product, not the rules.
	- Cem Kaner
%
Quality is, frankly, a bizarre thing. It's not elegant and clean. In 
fact, quality is messy, nebulous, and wholly subjective. Jerry 
Weinberg's statement of quality is "quality is value to some person". 
With the number of persons out there, there are just as many definitions 
of quality as there are people to perceive it. Therefore, the first 
person who has to decide that quality is sufficient is me. Point blank, 
would I want to use the software I am testing? If so, why? If not, why 
not? If I have a steady litany of why not's, then I have a duty and 
obligation to voice those concerns, even if I may be the only person who 
recognizes them as such. In short, I have to know what I want first. 
From there, I need to know what the organization wants, and then I need 
to know what my customers want (and by that, I mean what all my 
customers want).
	- Michael Larsen
%
Contrary to simple-minded intuition, it turns out that "tiny" changes 
are more likely than larger ones to be flawed. Roughly, a one-line 
change has about a 50/50 chance of producing an error, while a 20-line 
change is similarly wrong only about one-third of the time.
	- Jerry Weinberg
%
[W]hen Louis Armstrong was asked what makes good Jazz[, h]e said “I 
don’t know, but I know it when I hear it” . You could say the same thing 
when it comes to testing, “I don’t know what makes good testing, but I 
know it when I see it“.
	- James Willett
%
Crappy testing is easier than crappy engineering.  Excellent testing is 
FAR HARDER than excellent engineering.
	- Neel Kumar
%
As they say, “A passionate tester is more beneficial than an experienced developer.”
%
Don’t just fix the bugs; fix whatever permitted the bugs in the first place.
%
The principle objective of software testing is to give confidence in the software.
%
Quality is never an accident; it is always the result of intelligent effort.
%
The bitterness of poor quality remains long after the sweetness of meeting the schedule has been forgotten.
%
Software testers always go to heaven; they’ve already had their fair share of hell.
%
“Quality is not an act, it is a habit.”
	— Aristotle
%
“Software never was perfect and won’t get perfect. But is that a license to create garbage? The missing ingredient is our reluctance to quantify quality.”
	— Boris Beizer
%
“Testers don’t like to break things; they like to dispel the illusion that things work.”
	— Kaner, Bach, Pettichord
%
“Pretty good testing is easy to do (that’s partly why some people like to say ‘testing is dead’– they think testing isn’t needed as a special focus because they note that anyone can find at least some bugs some of the time). Excellent testing is quite hard to do.”
	— James Bach
%
“You can see a lot by just looking.”
	— Yogi Berra
%
“To those who say that “if you need testing at the end, you’re doing it wrong”, would you prefer a Boeing, or are you going Air Icarus?”
	— Michael Bolton
%
“The problem is not that testing is the bottleneck. The problem is that you don’t know what’s in the bottle. That’s a problem that testing addresses.“
	— Michael Bolton
%
“Testing is a skill. While this may come as a surprise to some people it is a simple fact.”
	— Fewster and Graham
%
“You can be a great tester if you have programming skills. You can also be a great tester if you have no programming skills at all. And, you can be a lousy tester with or without programming skills. A great tester will learn what skills she needs to continue to be great, in her own style.”
	— Jerry Weinberg
%
“No amount of testing can prove a software right, a single test can prove a software wrong.”
	— Amir Ghahrai
%
“Discovering the unexpected is more important than confirming the known.“
	— George E. P. Box
%
“The most exciting phrase to hear in science, the one that heralds discoveries, is not ‘Eureka!’ but ‘Now that’s funny…'”
	— Isaac Asimov
%
“Testing is an infinite process of comparing the invisible to the ambiguous in order to avoid the unthinkable happening to the anonymous.”
	— James Bach
%
"Pay attention to zeros. If there is a zero, someone will divide by it.”
	- Cem Kaner
%
“Testers don’t break software, software is already broken.”
	— Amir Gahrai
%
“Simple systems are not feasible because they require infinite testing.”
	— Norman Ralph Augustine
%
“If we want to be serious about quality, it is time to get tired of finding bugs and start preventing their happening in the first place.”
	— Alan Page
%
“Automation does not do what testers used to do, unless one ignores most things a tester really does. Automated testing is useful for extending the reach of the testers work, not to replace it.”
	— James Bach
%
“Right or wrong, it’s very pleasant to break something from time to time.” 
	— Fyodor Dostoevsky
%
f u cn rd ths, u cn gt a gd jb n sftwr tstng.
%
“Irreproducible bugs become highly reproducible right after delivery to the customer.”
	— Michael Stahl
%
Q: How many testers does it take to change a lightbulb? A: None, they just tell you that the room is dark.
%
Software and cathedrals are much the same: first we build them, then we pray.
%
Weeks of programming can save you hours of planning.
%
I don’t care if it works on your machine! We are not shipping your machine!
%
“If the software doesn’t have to work, you can always meet any other requirement.”
	— Jerry Weinberg
%
“We have as many testers as we have developers. And testers spend all their time testing, and developers spend half their time testing. We’re more of a testing, a quality software organization than we’re a software organization.”
	— Bill Gates
%
“A great tester gives programmers immediate feedback on what they did right and what they did wrong. Believe it or not, one of the most valuable features of a tester is providing positive reinforcement. There is no better way to improve a programmer’s morale, happiness, and subjective sense of well-being than a La Marzocco Linea espresso machine to have dedicated testers who get frequent releases from the developers, try them out, and give negative and positive feedback.”
	– Joel Spolsky
%
“Testing has to be an integral part of developing software and not a separate phase. When this approach is taken, product quality is owned by everyone on the team. It is easy to state, but hard to put into practice because of long-standing preconceived notions that developers and testers are better kept apart.”
	— James Sivak
%
“As ironic as it seems, the challenge of a tester is to test as little as possible. Test less, but test smarter.”
	- Federico Toledo
%
If you don’t like testing your product, most likely your customers won’t like to test it either.
%
"If you automate a mess, you get an automated mess.” 
	- Rod Michael
%
“Bad programmers have all the answers. Good testers have all the questions.” 
	- Gil Zilberfeld
%
Engineers call them "edge cases". I call them: what our users do.
%
“Testing is Questioning a system in order to evaluate it” 
	– James Bach
%
Conway's law – 
Any piece of software reflects the organizational structure that produced it.
%
Goodhart’s law: 
When a measure becomes a target, it ceases to become a good measure.
%
After a software is released, the first bug found will be by a person who normally does not use that portion of the program but was wondering why he can’t do something he normally would not do.
%
A patch is a piece of software which replaces old bugs with new bugs.
%
The number of bugs always exceeds the number of lines found in a program.
%
Every non trivial program has at least one bug
	Corollary 1 – A sufficient condition for program triviality is that it have no bugs.
	Corollary 2 – At least one bug will be observed after the author leaves the organization
%
Undetectable errors are infinite in variety, in contrast to detectable errors, which by definition are limited.
%
THE PAOMNNEHAL PWEOR OF THE HMUAN MNID. Aoccdrnig to rseerach at Cmabrigde Uinervtisy, it deosn't mttaer in waht oredr the ltteers in a wrod are, the olny iprmoatnt tihng is taht the frist and lsat ltteer be in the rghit pclae. The rset can be a taotl mses and you can sitll raed it wouthit porbelm. Tihs is bcuseae the huamn mnid deos not raed ervey lteter by istlef, but the wrod as a wlohe.
%
The chances of a program doing what it’s supposed to do is inversely proportional to the number of lines of code used to write it.
%

